{"version":3,"sources":["redux/contacts/contacts.types.js","Views/ContactList/ContactList.jsx","redux/contacts/contacts.actions.js","redux/contacts/contacts.reducer.js","redux/rootReducers.js","redux/store.js","Components/Contacts/InfoContact/InfoContact.jsx","redux/contacts/contacts.selectors.js","Views/FormContact/FormContact.jsx","App.js","index.js"],"names":["types","ADD_CONTACT","EDIT_CONTACT","DELETE_CONTACT","SEARCH_CONTACT","useStyles","makeStyles","header","background","cancelBtn","width","iconDelete","marginLeft","marginBottom","color","connect","state","contactList","contact","deleteContact","type","payload","classes","React","useState","expanded","setExpanded","search","setSearch","filteredContact","filter","contactItem","phone","startsWith","firstname","toLocaleLowerCase","lastname","toUpperCase","Container","TableContainer","className","component","Paper","root","IconButton","iconButton","aria-label","InputBase","onChange","event","target","value","handleChangeSearch","id","name","input","placeholder","inputProps","Divider","divider","orientation","Table","TableHead","TableRow","TableBody","map","item","key","Accordion","panel","isExpanded","AccordionSummary","expandIcon","aria-controls","Typography","heading","AccordionDetails","email","address","to","fontSize","onClick","Swal","fire","title","text","icon","showCancelButton","cancelButtonColor","confirmButtonText","confirmButtonColor","focusCancel","then","result","initial_state","contactReducer","action","combineReducers","middlewares","logger","createStore","rootReducer","applyMiddleware","maxWidth","contactId","Card","CardActionArea","CardMedia","alt","height","image","CardContent","gutterBottom","variant","CardActions","Button","size","createSelector","length","border","fontWeight","inputText","saveBtn","backgroundColor","outlineColor","clearForm","mapStateToProps","createStructuredSelector","addContact","editContact","history","useHistory","useParams","tempraryContact","useSelector","find","setContact","handleChangeContact","Form","onSubmit","preventDefault","push","handleSubmit","Row","ThemeProvider","TextField","label","fullWidth","required","margin","fieldInput","startIcon","App","props","isOpen","setIsOpen","store","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ee234a7.chunk.js","sourcesContent":["const types = {\r\n    ADD_CONTACT : \"ADD_CONTACT\",\r\n    EDIT_CONTACT : \"EDIT_CONTACT\",\r\n    DELETE_CONTACT : \"DELETE_CONTACT\",\r\n    SEARCH_CONTACT : \"SEARCH_CONTACT\"\r\n}\r\n\r\nexport default types;","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Container} from '@material-ui/core';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Swal from 'sweetalert2'\r\nimport {deleteContact} from '../../redux/contacts/contacts.actions';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport './ContactList.css';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    header: {\r\n        background: 'linear-gradient(45deg , #17744b, #2db378)'\r\n    },\r\n\r\n    cancelBtn: {\r\n        width: '180px'\r\n    },\r\n\r\n    iconDelete: {\r\n        marginLeft: '20px',\r\n        marginBottom: '5px',\r\n        '&:hover': {\r\n            color: '#ec1649'\r\n        }\r\n    }\r\n});\r\n\r\nfunction ContactList({contactList, deleteContact}) {\r\n\r\n    const classes = useStyles({});\r\n\r\n    const [expanded , setExpanded] = React.useState(false);\r\n    const [search , setSearch] = useState('');\r\n\r\n    const filteredContact = contactList.filter(contactItem => \r\n        contactItem.phone.startsWith(search) \r\n    || contactItem.firstname.startsWith(search.toLocaleLowerCase()) \r\n    || contactItem.lastname.startsWith(search.toLocaleLowerCase()) \r\n    || contactItem.firstname.startsWith(search.toUpperCase())\r\n    || contactItem.lastname.startsWith(search.toUpperCase()));\r\n\r\n    const handleChangeSearch = (event) => {\r\n        setSearch(event.target.value);\r\n    }\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded\r\n            ? panel\r\n            : false);\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        Swal\r\n            .fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'error',\r\n            showCancelButton: true,\r\n            cancelButtonColor: '#3085d6',\r\n            confirmButtonText: 'delete it!',\r\n            confirmButtonColor: '#eee',\r\n            focusCancel: true\r\n\r\n        })\r\n            .then((result) => {\r\n                if (result.value) {\r\n                    deleteContact(id)\r\n                    Swal.fire('Deleted!', 'Your file has been deleted.', 'success')\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <TableContainer className=\"mt-4\" component={Paper}>\r\n                <Paper component=\"form\" className={`${classes.root} mb-1`}>\r\n                    <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon/>\r\n                    </IconButton>\r\n                    <InputBase\r\n                        onChange={(event)=>handleChangeSearch(event)}\r\n                        id=\"searchInput\"\r\n                        name={'search'}\r\n                        value={search}\r\n                        className={classes.input}\r\n                        placeholder=\"Search Contact\"\r\n                        inputProps={{\r\n                        'aria-label': 'search google maps'\r\n                    }}/>\r\n                    <Divider className={classes.divider} orientation=\"vertical\"/>\r\n\r\n                </Paper>\r\n                <Table aria-label=\"customized table\">\r\n                    <TableHead className={classes.header}>\r\n                        <TableRow>\r\n                            <th>Table Of Contacts</th>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {filteredContact.map(item => <TableRow key={item.id}>\r\n                            <Accordion\r\n                                expanded={expanded === `panel${item.id}`}\r\n                                onChange={handleChange(`panel${item.id}`)}>\r\n                                <AccordionSummary\r\n                                    expandIcon={< ExpandMoreIcon />}\r\n                                    aria-controls=\"panel1bh-content\"\r\n                                    id={`panel${item.id}bh-header`}>\r\n                                    <Typography className={classes.heading}>{item.firstname} {item.lastname}</Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                    <Typography>\r\n                                        <p>{item.phone}</p>\r\n                                        <p>{item.email}</p>\r\n                                        <p>{item.address}</p>\r\n                                        <div>\r\n                                            <Link to={`update/${item.id}`}>Edit</Link>\r\n                                            <DeleteIcon\r\n                                                fontSize=\"small\"\r\n                                                className={classes.iconDelete}\r\n                                                onClick={() => handleDelete(item.id)}/>\r\n                                        </div>\r\n                                    </Typography>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        </TableRow>)}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {contactList: state.contact.contactList}\r\n}\r\n\r\nexport default connect(mapStateToProps, {deleteContact})(ContactList);\r\n","import types from '../contacts/contacts.types';\r\n\r\nexport const addContact = (contact) => {\r\n    return {\r\n        type : types.ADD_CONTACT,\r\n        payload : contact\r\n    }\r\n}\r\n\r\nexport const editContact = (contact) => {\r\n    return {\r\n        type : types.EDIT_CONTACT,\r\n        payload : contact\r\n    }\r\n}\r\n\r\nexport const deleteContact = (contact) => {\r\n    return {\r\n        type : types.DELETE_CONTACT,\r\n        payload : contact\r\n    }\r\n}\r\n\r\nexport const searchContact = (contact) => {\r\n    return {\r\n        type : types.SEARCH_CONTACT,\r\n        payload : contact\r\n    }\r\n}","import types from './contacts.types';\r\n\r\nconst initial_state = {\r\n    contactList : [\r\n        {\r\n            id:1,\r\n            firstname : 'Ali',\r\n            lastname : 'Nazari',\r\n            email : 'alinazari@gmail.com',\r\n            phone : '09193472976',\r\n            address : 'shiraz pol hafez'\r\n        },\r\n        {\r\n            id:2,\r\n            firstname : 'Saeed',\r\n            lastname : 'Mohammadi',\r\n            email : 'saeedmohammadi@gmail.com',\r\n            phone : '09103434955',\r\n            address : 'esfahan najafabad',\r\n        },\r\n    ]\r\n}\r\n\r\nconst contactReducer = (state = initial_state , action) => {\r\n    const {type , payload} = action\r\n    switch(type){\r\n        case types.ADD_CONTACT :\r\n            return {\r\n                ...state,\r\n                contactList : [...state.contactList , payload]\r\n            }\r\n\r\n            case types.EDIT_CONTACT :\r\n                return {\r\n                    ...state,\r\n                    contactList : state.contactList.map(item=> item.id == payload.id ? payload : item)\r\n                }\r\n                case types.DELETE_CONTACT :\r\n                    return {\r\n                        ...state,\r\n                        contactList : state.contactList.filter(item=> item.id !== payload)\r\n                    }\r\n                    case types.SEARCH_CONTACT :\r\n                        return {\r\n                            ...state,\r\n                            contactList : state.contactList.filter(item=> item.id == payload)\r\n                        }\r\n    \r\n\r\n        default :\r\n            return state ;\r\n    }\r\n}\r\n\r\nexport default contactReducer ;","import {combineReducers} from 'redux';\r\n\r\nimport contactReducer  from './contacts/contacts.reducer';\r\n\r\nexport default combineReducers({\r\n    contact : contactReducer\r\n})","import {applyMiddleware , createStore} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './rootReducers';\r\n\r\nconst middlewares = [logger];\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    applyMiddleware(...middlewares),\r\n)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n});\r\n\r\nexport function InfoContact({contactList , contactId}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"140\"\r\n          image=\"/static/images/cards/contemplative-reptile.jpg\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            \r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n            across all continents except Antarctica\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        contactList : state.contact.contactList\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps , {})(InfoContact)\r\n","import {createSelector} from 'reselect';\r\n\r\nconst contactList = state => state.contact.contactList;\r\n\r\nexport const contactId = createSelector(\r\n    contactList , \r\n    (contactItem) => contactItem.length + 1\r\n)","import React, {useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\nimport {Row, Form} from 'reactstrap';\r\nimport {addContact, editContact} from '../../redux/contacts/contacts.actions';\r\nimport {contactId} from '../../redux/contacts/contacts.selectors';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {connect} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useSelector} from \"react-redux\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport './FormContact.css';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        border: 'none',\r\n        // background: 'linear-gradient(145deg , #17744b, #2db378)'\r\n    },\r\n\r\n    title: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        marginLeft: '10px',\r\n        marginBottom: '20px'\r\n    },\r\n\r\n    inputText: {\r\n        color: 'red'\r\n    },\r\n\r\n    saveBtn: {\r\n        backgroundColor: '#17744b',\r\n        fontWeight: 'bold',\r\n        '&:hover': {\r\n            backgroundColor: '#2db378'\r\n        },\r\n        outlineColor: '#17744b'\r\n    },\r\n    clearForm: {\r\n        color: 'lightgray',\r\n        '&:hover': {\r\n            color: 'gray'\r\n        }\r\n    }\r\n\r\n});\r\n\r\nfunction FormContact({addContact, contactId, editContact}) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const {id} = useParams();\r\n    const tempraryContact = useSelector(state => state.contact.contactList.find(item => item.id == id))\r\n\r\n    const [contact,\r\n        setContact] = useState(tempraryContact\r\n        ? {\r\n            firstname: tempraryContact.firstname,\r\n            lastname: tempraryContact.lastname,\r\n            email: tempraryContact.email,\r\n            phone: tempraryContact.phone,\r\n            address: tempraryContact.address\r\n        }\r\n        : {\r\n            firstname: '',\r\n            lastname: '',\r\n            email: '',\r\n            phone: '',\r\n            address: ''\r\n        })\r\n\r\n    const handleChangeContact = (event) => {\r\n        const {name, value} = event.target;\r\n        setContact({\r\n            ...contact,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        tempraryContact && editContact({\r\n            id: tempraryContact.id,\r\n            ...contact\r\n        })\r\n\r\n        !tempraryContact && addContact({\r\n            id: contactId,\r\n            ...contact\r\n        })\r\n        history.push('/contacts')\r\n\r\n    }\r\n\r\n    return (\r\n        <Card className={`${classes.root} mt-4`} variant=\"outlined\">\r\n            <CardContent className=\"mt-2 mb-2 mx-2\">\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                    Add new contact\r\n                </Typography>\r\n                <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Row className=\"my-2 mx-2\">\r\n                        <ThemeProvider>\r\n                            <TextField\r\n                                onChange={handleChangeContact}\r\n                                className={classes.inputText}\r\n                                label=\"Firstname\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                type=\"text\"\r\n                                value={contact.firstname}\r\n                                name=\"firstname\"\r\n                                id=\"firstname\"\r\n                                required/>\r\n                        </ThemeProvider>\r\n                    </Row>\r\n                    <Row className=\"my-2 mx-2\">\r\n                        <ThemeProvider >\r\n\r\n                            <TextField\r\n                                onChange={handleChangeContact}\r\n                                className={classes.margin}\r\n                                fullWidth\r\n                                label=\"Lastname\"\r\n                                variant=\"outlined\"\r\n                                value={contact.lastname}\r\n                                name=\"lastname\"\r\n                                id=\"lastname\"\r\n                                required/>\r\n                        </ThemeProvider>\r\n                    </Row>\r\n                    <Row className=\"my-2 mx-2\">\r\n                        <ThemeProvider >\r\n\r\n                            <TextField\r\n                                onChange={handleChangeContact}\r\n                                className={classes.margin}\r\n                                fullWidth\r\n                                label=\"Phone\"\r\n                                variant=\"outlined\"\r\n                                value={contact.phone}\r\n                                name=\"phone\"\r\n                                id=\"phone\"\r\n                                required/>\r\n                        </ThemeProvider>\r\n                    </Row>\r\n                    <Row className=\"my-2 mx-2\">\r\n                        <ThemeProvider >\r\n\r\n                            <TextField\r\n                                onChange={handleChangeContact}\r\n                                className={classes.margin}\r\n                                fullWidth\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                                value={contact.email}\r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                required/>\r\n                        </ThemeProvider>\r\n                    </Row>\r\n                    <Row className=\"my-2 mx-2\">\r\n                        <ThemeProvider className={classes.fieldInput}>\r\n\r\n                            <TextField\r\n                                onChange={handleChangeContact}\r\n                                className={classes.margin}\r\n                                fullWidth\r\n                                label=\"Address\"\r\n                                variant=\"outlined\"\r\n                                value={contact.address}\r\n                                name=\"address\"\r\n                                id=\"address\"\r\n                                required/>\r\n                        </ThemeProvider>\r\n                    </Row>\r\n\r\n                    <CardActions>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            className={`${classes.saveBtn} flex-nowrap`}\r\n                            startIcon={< SaveIcon />}>\r\n                            Save Contact\r\n                        </Button>{'  '}\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            type='reset'\r\n                            size=\"large\"\r\n                            className={classes.clearForm}>\r\n                            Clear\r\n                        </Button>\r\n\r\n                    </CardActions>\r\n                </Form>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({contactId})\r\n\r\nexport default connect(mapStateToProps, {addContact, editContact})(FormContact)","import React, {useState} from \"react\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem\n} from 'reactstrap';\n\nimport ContactList from './Views/ContactList/ContactList';\nimport {Container} from \"@material-ui/core\";\nimport store from './redux/store';\nimport {Provider} from 'react-redux';\nimport InfoContact from \"./Components/Contacts/InfoContact/InfoContact\";\nimport FormContact from './Views/FormContact/FormContact';\n\nconst App = (props) => {\n\n    const [isOpen,\n        setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <Provider store={store}>\n            <Container className=\"px-0\">\n                <Router>\n                    <div>\n                        <Navbar className=\"pl-5\" light expand=\"md\">\n                            <NavbarBrand className=\"text-light\" to=\"/\">\n                                <Link className=\"nav-link text-light\" to=\"/\">Contacts</Link>\n                            </NavbarBrand>\n                            <NavbarToggler onClick={toggle}/>\n                            <Collapse isOpen={isOpen} navbar>\n                                <Nav className=\"mr-auto text-light\" navbar>\n                                    <NavItem>\n                                        <Link className=\"nav-link text-light\" to=\"/contacts\">Contactlist</Link>\n                                    </NavItem>\n                                    <NavItem>\n                                        <Link className=\"nav-link text-light\" to=\"/add\">Add contact</Link>\n                                    </NavItem>\n                                </Nav>\n                            </Collapse>\n                        </Navbar>\n                        <Switch>\n                            {/* <Route exact path=\"/contacts/:id\">\n                                <InfoContact/>\n                            </Route> */}\n                            <Route exact path=\"/update/:id\">\n                                <FormContact/>\n                            </Route>\n                            <Route exact path=\"/contacts\">\n                                <ContactList/>\n                            </Route>\n                            <Route exact path=\"/add\">\n                                <FormContact/>\n                            </Route>\n                            <Route exact path=\"/\"></Route>\n                        </Switch>\n                    </div>\n                </Router>\n            </Container>\n        </Provider>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}